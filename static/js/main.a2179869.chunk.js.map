{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchchange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filterrobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAYeA,EAXJ,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACpB,OACQ,sBAAKC,UAAU,sDAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCeLK,EAnBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACjB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACzB,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCEUC,EAXC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAClB,OACI,qBAAKT,UAAU,MAAf,SACJ,uBACCA,UAAU,mCACXU,KAAK,SACJC,YAAY,mBACbC,SAAUH,OCAKI,G,MAPF,SAACC,GACV,OACJ,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAkBC,OAAO,SAA/D,SACKJ,EAAMK,aCqCIC,E,kDAnCX,aAAc,IAAD,8BACT,gBAUJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAVxC,EAAKC,MAAM,CACPvB,OAAO,GACPoB,YAAY,IAJP,E,qDAOb,WAAoB,IAAD,OACfI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAC3EF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACnB,OAAO4B,S,oBAMvC,WAAS,IAAD,OACEC,EAAaC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GACxC,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAErE,OAA8B,IAA3BF,KAAKP,MAAMvB,OAAOkC,OACX,yCAIlB,sBAAKtC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ6B,a,GA7BJM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.a2179869.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card=({name,email,id}) => {\r\n    return(\r\n            <div className='tc grow bg-light-green br3 pa3 dib ma2 bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200*200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n// import { robots } from \"./robots\";\r\nconst CardList=({robots})=>{\r\nreturn(\r\n    <div>\r\n        {\r\n        robots.map((user,i)=>{\r\nreturn (\r\n<Card \r\nkey={i}\r\nid={robots[i].id} \r\nname={robots[i].name} \r\nemail={robots[i].email}\r\n/>\r\n    );\r\n    \r\n})\r\n}\r\n    </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\nconst SearchBox=({searchchange})=>{\r\nreturn(\r\n    <div className='pa2'>\r\n<input\r\n className='pa3 ba b--green bg-lightest-blue' \r\ntype='search'\r\n placeholder=\"Search Superhero\"\r\nonChange={searchchange}/>\r\n</div>\r\n);\r\n}\r\nexport default SearchBox;","import React from 'react';\r\nconst Scroll=(props) => {\r\n    return(\r\n<div style={{overflow:'scroll',border:'5px solid black',height:'800px'}}>\r\n    {props.children}\r\n</div>\r\n    );\r\n};\r\nexport default Scroll;","import CardList from '../Components/CardList'\r\nimport SearchBox from '../Components/SearchBox'\r\nimport React,{ Component } from \"react\";\r\nimport './App.css'\r\nimport Scroll from '../Components/Scroll'\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=>response.json())\r\n        .then(users=>this.setState({robots:users}))\r\n    }\r\n    onSearchChange=(event) => {\r\n        this.setState({searchfield:event.target.value})\r\n      \r\n    }\r\n    render(){\r\n        const filterrobots=this.state.robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        if(this.state.robots.length===0){\r\n          return  <h1>Loading</h1>\r\n        }\r\n        else{\r\n    return(\r\n<div className=\"tc\">\r\n    <h1 className='f1'>ROBOFRIENDS</h1>\r\n    <SearchBox searchchange={this.onSearchChange}/>\r\n    <Scroll>\r\n    <CardList robots={filterrobots}/>\r\n   </Scroll>\r\n</div>\r\n    );\r\n        }\r\n    }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons'\r\n\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}